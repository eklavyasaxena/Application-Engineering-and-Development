/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SMAdminInterface.ManageMarketCatalog;

import Business.Market.Customer;
import Business.Market.Market;
import Business.MarketOffers.MarketOffer;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sachinsenthilkumar
 */
public class SearchUpdateMarketPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Market market;
    MarketOffer marketOffer;/**
     * Creates new form SearchUpdateMarketPanel
     */
   

    public SearchUpdateMarketPanel(JPanel userProcessContainer, Market market, MarketOffer marketOffer) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.market=market;
        this.marketOffer = marketOffer;
        
        txtMarketType.setEnabled(false);
        txtMarketID.setEnabled(false);
        txtMarketCeilingPercent.setEnabled(false);
        txtMarketFloorPercent.setEnabled(false);
        txtMarketTargetPercent.setEnabled(false);
        
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
        
        txtMarketType.setText(marketOffer.getMarket().getMarketType());
        txtMarketID.setText(marketOffer.getMarket().getMarketId());
        txtMarketCeilingPercent.setText(String.valueOf(marketOffer.getCeilingPercentage()));
        txtMarketFloorPercent.setText(String.valueOf(marketOffer.getFloorPercentage()));
        txtMarketTargetPercent.setText(String.valueOf(marketOffer.getTargetPercentage()));
        
        populateTable();
        
    }
    
    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)tblCustomerList.getModel();
        dtm.setRowCount(0);
        
        try{
        for(Customer customer : market.getCustomerDirectory()){
            Object[] row = new Object[2];
            row[0] = customer;
            row[1] = customer.getCustomerName();
            
            dtm.addRow(row);
        }
        }catch(Exception e){
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblViewMarkets = new javax.swing.JLabel();
        lblUserID = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        txtMarketID = new javax.swing.JTextField();
        txtMarketType = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lblUserID1 = new javax.swing.JLabel();
        lblUserID2 = new javax.swing.JLabel();
        lblUserID3 = new javax.swing.JLabel();
        txtMarketCeilingPercent = new javax.swing.JTextField();
        txtMarketTargetPercent = new javax.swing.JTextField();
        txtMarketFloorPercent = new javax.swing.JTextField();
        jScrollPane = new javax.swing.JScrollPane();
        tblCustomerList = new javax.swing.JTable();
        btnDeleteMarket = new javax.swing.JButton();
        btnAddCustomer = new javax.swing.JButton();
        lblUserID4 = new javax.swing.JLabel();
        lblUserID5 = new javax.swing.JLabel();
        txtCustomerID = new javax.swing.JTextField();
        txtCustomerName = new javax.swing.JTextField();

        lblViewMarkets.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        lblViewMarkets.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblViewMarkets.setText("View Market's Details");

        lblUserID.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblUserID.setText("Market ID:");

        lblUserName.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblUserName.setText("Market Type:");

        txtMarketID.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtMarketID.setDisabledTextColor(new java.awt.Color(0, 0, 149));
        txtMarketID.setEnabled(false);

        txtMarketType.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtMarketType.setDisabledTextColor(new java.awt.Color(0, 0, 149));
        txtMarketType.setEnabled(false);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblUserID1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblUserID1.setText("Market Ceiling Percentage: ");

        lblUserID2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblUserID2.setText("Market Floor Percentage: ");

        lblUserID3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblUserID3.setText("Market Target Percentage: ");

        txtMarketCeilingPercent.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtMarketCeilingPercent.setDisabledTextColor(new java.awt.Color(0, 0, 149));
        txtMarketCeilingPercent.setEnabled(false);

        txtMarketTargetPercent.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtMarketTargetPercent.setDisabledTextColor(new java.awt.Color(0, 0, 149));
        txtMarketTargetPercent.setEnabled(false);

        txtMarketFloorPercent.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtMarketFloorPercent.setDisabledTextColor(new java.awt.Color(0, 0, 149));
        txtMarketFloorPercent.setEnabled(false);

        tblCustomerList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Customer Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(tblCustomerList);

        btnDeleteMarket.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDeleteMarket.setText("<< Select & Delete Customer >>");
        btnDeleteMarket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMarketActionPerformed(evt);
            }
        });

        btnAddCustomer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAddCustomer.setText("Add Customer >>");
        btnAddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCustomerActionPerformed(evt);
            }
        });

        lblUserID4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblUserID4.setText("Customer Name:");

        lblUserID5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblUserID5.setText("Customer ID:");

        txtCustomerID.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtCustomerID.setDisabledTextColor(new java.awt.Color(0, 0, 149));
        txtCustomerID.setEnabled(false);

        txtCustomerName.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtCustomerName.setDisabledTextColor(new java.awt.Color(0, 0, 149));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(94, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblViewMarkets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblUserID3, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMarketTargetPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblUserID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblUserID1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMarketID, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMarketType, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMarketCeilingPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblUserID2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnBack))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnUpdate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtMarketFloorPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblUserID5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblUserID4, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAddCustomer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCustomerName, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtCustomerID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnDeleteMarket, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblViewMarkets)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserID)
                            .addComponent(txtMarketID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserName)
                            .addComponent(txtMarketType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserID1)
                            .addComponent(txtMarketCeilingPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserID3)
                            .addComponent(txtMarketTargetPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserID2)
                            .addComponent(txtMarketFloorPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBack)
                            .addComponent(btnUpdate)
                            .addComponent(btnSave))
                        .addGap(0, 501, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteMarket)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserID5)
                            .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserID4)
                            .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(btnAddCustomer)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageMarketJPanel manageMarketJPanel = (ManageMarketJPanel) component;
        manageMarketJPanel.populateTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        txtMarketType.setEnabled(true);
        txtMarketCeilingPercent.setEnabled(true);
        txtMarketFloorPercent.setEnabled(true);
        txtMarketTargetPercent.setEnabled(true);

        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String marketType = txtMarketType.getText();
        String marketCeilingPrice = txtMarketCeilingPercent.getText();
        String marketTargetPrice = txtMarketTargetPercent.getText();
        String marketFloorPrice = txtMarketFloorPercent.getText();
        
        
        if((marketType.equals("") || !(marketType.matches("[a-zA-Z]+")))||
                (marketCeilingPrice.equals("") || !(marketCeilingPrice.matches("[0-9]+")) ||(Integer.parseInt(marketCeilingPrice)>100))||
                (marketFloorPrice.equals("") || !(marketFloorPrice.matches("[0-9]+"))||(Integer.parseInt(marketFloorPrice)>100))||
                (marketTargetPrice.equals("") || !(marketTargetPrice.matches("[0-9]+"))||(Integer.parseInt(marketTargetPrice)>100))){
            JOptionPane.showMessageDialog(null,"Invalid Data");
        }
        else{
            marketOffer.setCeilingPercentage(Integer.parseInt(marketCeilingPrice));
            marketOffer.setFloorPercentage(Integer.parseInt(marketFloorPrice));
            marketOffer.setTargetPercentage(Integer.parseInt(marketTargetPrice));
            marketOffer.getMarket().setMarketType(marketType);
            
            JOptionPane.showMessageDialog(null, "Market Updated Successfully");
            
            txtMarketType.setEnabled(false);
            txtMarketCeilingPercent.setEnabled(false);
            txtMarketFloorPercent.setEnabled(false);
            txtMarketTargetPercent.setEnabled(false);
            
            btnSave.setEnabled(false);
            btnUpdate.setEnabled(true);
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMarketActionPerformed
        // TODO add your handling code here:
        int row = tblCustomerList.getSelectedRow();

        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please Select a Row from the TABLE First", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to DELETE the Account?", "Warning", dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
            Customer customer  = (Customer)tblCustomerList.getValueAt(row, 0);
            market.deleteCustomer(customer);
            populateTable();
        }
    }//GEN-LAST:event_btnDeleteMarketActionPerformed

    private void btnAddCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCustomerActionPerformed
        // TODO add your handling code here:
        String customerName = txtCustomerName.getText();
        
        if((customerName.equals("") || !(customerName.matches("[a-zA-Z]+")))){
            JOptionPane.showMessageDialog(null,"Invalid Data");
        }
        else{
            Customer customer = market.addCustomer();
            
            customer.setCustomerName(customerName);
            
            JOptionPane.showMessageDialog(null, "Customer Added Successfully");
            
            txtCustomerName.setText("");
            
            populateTable();
        }

    }//GEN-LAST:event_btnAddCustomerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCustomer;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteMarket;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel lblUserID;
    private javax.swing.JLabel lblUserID1;
    private javax.swing.JLabel lblUserID2;
    private javax.swing.JLabel lblUserID3;
    private javax.swing.JLabel lblUserID4;
    private javax.swing.JLabel lblUserID5;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblViewMarkets;
    private javax.swing.JTable tblCustomerList;
    private javax.swing.JTextField txtCustomerID;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtMarketCeilingPercent;
    private javax.swing.JTextField txtMarketFloorPercent;
    private javax.swing.JTextField txtMarketID;
    private javax.swing.JTextField txtMarketTargetPercent;
    private javax.swing.JTextField txtMarketType;
    // End of variables declaration//GEN-END:variables
}
