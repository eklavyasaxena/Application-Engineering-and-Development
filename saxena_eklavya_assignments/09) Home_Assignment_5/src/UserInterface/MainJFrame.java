/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.Person;
import Business.PersonDirectory;
import Business.UserAccount;
import Business.UserAccountDirectory;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author eklav
 */
public class MainJFrame extends javax.swing.JFrame {

    PersonDirectory personDirectory;
    UserAccountDirectory userAccountDirectory;
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() throws UnsupportedEncodingException {
        initComponents();
        this.personDirectory = new PersonDirectory();
        this.userAccountDirectory = new UserAccountDirectory();
        populateUsers();
    }
    
    public void populateUsers() throws UnsupportedEncodingException{
        BufferedReader br = null;
        String line = "";
        String csvSplitBy = ",";
        String csvPerson = "person_data.csv";
        
        try {
            br = new BufferedReader(new FileReader(csvPerson));
            while ((line = br.readLine()) != null){
                // use comma as separator
                String[] personElement = line.split(csvSplitBy);
                
                Person person = new Person();
                personDirectory.getPersonList().add(person);
                String firstName = personElement[0];
                String lastName = personElement[1];
                String email = personElement[2];
                
                person.setFirstName(firstName);
                person.setLastName(lastName);
                person.setEmail(email);
            }
            int i=1;
            for(Person p : personDirectory.getPersonList()){
                System.out.println(i+":PersonID-->"+p.getPersonID()+"\tFirstName-->"+p.getFirstName()+"\tLastName-->"+p.getLastName()
                    +"\tEmail-->"+p.getEmail());
                i++;
            }
        }
        catch (FileNotFoundException e){
            e.printStackTrace();
        }
        catch (IOException e){
            e.printStackTrace();
        } 
        finally {
            if (br != null) {
                try {
                    br.close();
                }
                catch (IOException e){
                    e.printStackTrace();
                }
            }
        }
        
        UserAccount userAccount = new UserAccount();
        
        userAccountDirectory.getUserList().add(userAccount);
        for (Person person : personDirectory.getPersonList()){
            if((person.getFirstName().compareTo("Eklavya")==0)){
                userAccount.setPerson(person);
            }
        }
        userAccount.setUserName("admin");
        
        String pswd = userAccount.hash_SHA_512_SecurePassword("admin", "COEXIST");
        userAccount.setPassword(pswd);
        userAccount.setRole("System Admin");
        userAccount.setStatus("Active");
        
        
        UserAccount userAccount1 = new UserAccount();
        userAccountDirectory.getUserList().add(userAccount1);
        for (Person person : personDirectory.getPersonList()){
            if((person.getFirstName().compareTo("Tom")==0)){
                userAccount1.setPerson(person);
            }
        }
        userAccount1.setUserName("hradmin");
        
        String hrpswd = userAccount1.hash_SHA_512_SecurePassword("hradmin", "COEXIST");
        userAccount1.setPassword(hrpswd);
        userAccount1.setRole("HR Admin");
        userAccount1.setStatus("Active");
        
        int j = 1;
        for (UserAccount u : userAccountDirectory.getUserList()){
            System.out.println(j+":UserID-->"+u.getUserID()+"\tUserName-->"+u.getUserName()+
                    "\tPassword-->"+u.getPassword()+"\tRole"+u.getRole()+"\tStatus-->"+u.getStatus()
                        +"\nPersonID-->"+u.getPerson().getPersonID()+"\tFirstName--->"+u.getPerson().getFirstName()+
                        "\tLastName-->"+u.getPerson().getLastName()+"\tEmail-->"+u.getPerson().getEmail());
            j++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        topJPanel = new javax.swing.JPanel();
        jSeparator = new javax.swing.JSeparator();
        lblUserPersonMgmt = new javax.swing.JLabel();
        lblInterface = new javax.swing.JLabel();
        btnStartTheApplication = new javax.swing.JButton();
        userProcessContainer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        splitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        topJPanel.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblUserPersonMgmt.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        lblUserPersonMgmt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Logo.PNG"))); // NOI18N
        lblUserPersonMgmt.setText("EROX Sales");

        lblInterface.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblInterface.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInterface.setText("since 1906");

        btnStartTheApplication.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnStartTheApplication.setText("Start the Application");
        btnStartTheApplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartTheApplicationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topJPanelLayout = new javax.swing.GroupLayout(topJPanel);
        topJPanel.setLayout(topJPanelLayout);
        topJPanelLayout.setHorizontalGroup(
            topJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topJPanelLayout.createSequentialGroup()
                .addContainerGap(397, Short.MAX_VALUE)
                .addGroup(topJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblUserPersonMgmt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblInterface, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnStartTheApplication, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(411, Short.MAX_VALUE))
        );
        topJPanelLayout.setVerticalGroup(
            topJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(topJPanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(lblUserPersonMgmt)
                .addGap(1, 1, 1)
                .addComponent(lblInterface)
                .addGap(39, 39, 39))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnStartTheApplication)
                .addGap(33, 33, 33))
        );

        splitPane.setTopComponent(topJPanel);

        userProcessContainer.setLayout(new java.awt.CardLayout());
        splitPane.setRightComponent(userProcessContainer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartTheApplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartTheApplicationActionPerformed
        // TODO add your handling code here:
        LoginScreen loginScreen = new LoginScreen(userProcessContainer, personDirectory, userAccountDirectory);
        userProcessContainer.add("LoginScreen", loginScreen);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnStartTheApplicationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainJFrame().setVisible(true);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStartTheApplication;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JLabel lblInterface;
    private javax.swing.JLabel lblUserPersonMgmt;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JPanel topJPanel;
    private javax.swing.JPanel userProcessContainer;
    // End of variables declaration//GEN-END:variables
}
