/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminInterface.ManageUserAccountsInterface;

import Business.PersonDirectory;
import Business.UserAccount;
import Business.UserAccountDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author eklav
 */
public class ManageUserAccountsJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    PersonDirectory personDirectory;
    UserAccountDirectory userAccountDirectory;

    /**
     * Creates new form ManageUserAccountsJPanel
     */
    public ManageUserAccountsJPanel(JPanel userProcessContainer, PersonDirectory personDirectory, UserAccountDirectory userAccountDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.personDirectory = personDirectory;
        this.userAccountDirectory = userAccountDirectory;
        
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)tblUserAccountList.getModel();
        dtm.setRowCount(0);
        
        for(UserAccount userAccount : userAccountDirectory.getUserList()){
            Object[] row = new Object[7];
            row[0] = userAccount.getPerson().getPersonID();
            row[1] = userAccount.getPerson().getFirstName();
            row[2] = userAccount;
            row[3] = userAccount.getUserName();
            row[4] = userAccount.getPassword();
            row[5] = userAccount.getRole();
            row[6] = userAccount.getStatus();
            
            dtm.addRow(row);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManageUserAccounts = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        tblUserAccountList = new javax.swing.JTable();
        txtSearchUserID = new javax.swing.JTextField();
        btnSearchUserAccount = new javax.swing.JButton();
        btnAddUserAccount = new javax.swing.JButton();
        btnUpdateUserAccount = new javax.swing.JButton();
        btnDeleteUserAccount = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        lblManageUserAccounts.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        lblManageUserAccounts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageUserAccounts.setText("Manage User Accounts - Work Responsibility");

        tblUserAccountList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Person ID", "Person", "User ID", "User Name", "Password", "Role", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(tblUserAccountList);
        if (tblUserAccountList.getColumnModel().getColumnCount() > 0) {
            tblUserAccountList.getColumnModel().getColumn(0).setResizable(false);
            tblUserAccountList.getColumnModel().getColumn(1).setResizable(false);
            tblUserAccountList.getColumnModel().getColumn(2).setResizable(false);
            tblUserAccountList.getColumnModel().getColumn(3).setResizable(false);
            tblUserAccountList.getColumnModel().getColumn(4).setResizable(false);
            tblUserAccountList.getColumnModel().getColumn(5).setResizable(false);
            tblUserAccountList.getColumnModel().getColumn(6).setResizable(false);
        }

        txtSearchUserID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSearchUserID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSearchUserID.setText("Enter User ID Here");
        txtSearchUserID.setToolTipText("Enter User Name");
        txtSearchUserID.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtSearchUserID.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        txtSearchUserID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchUserIDFocusGained(evt);
            }
        });

        btnSearchUserAccount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSearchUserAccount.setText("Search User Account >>");
        btnSearchUserAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchUserAccountActionPerformed(evt);
            }
        });

        btnAddUserAccount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAddUserAccount.setText("Add User Account >>");
        btnAddUserAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserAccountActionPerformed(evt);
            }
        });

        btnUpdateUserAccount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnUpdateUserAccount.setText("View/Update User Account >>");
        btnUpdateUserAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserAccountActionPerformed(evt);
            }
        });

        btnDeleteUserAccount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDeleteUserAccount.setText("<< Delete User Account >>");
        btnDeleteUserAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserAccountActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(259, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblManageUserAccounts, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtSearchUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnAddUserAccount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSearchUserAccount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdateUserAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                                .addComponent(btnDeleteUserAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)))))
                .addContainerGap(271, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblManageUserAccounts)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchUserAccount)
                    .addComponent(txtSearchUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAddUserAccount)
                .addGap(18, 18, 18)
                .addComponent(btnUpdateUserAccount)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteUserAccount)
                .addGap(37, 37, 37)
                .addComponent(btnBack)
                .addContainerGap(49, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchUserAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchUserAccountActionPerformed
        // TODO add your handling code here:
        if(txtSearchUserID.getText().equals("") || !(txtSearchUserID.getText().matches("[0-9]+"))){
            JOptionPane.showMessageDialog(null,"Invalid Data");
        }
        else{
            UserAccount result = userAccountDirectory.searchUserAccount(Integer.valueOf(txtSearchUserID.getText()));
            if(result == null){
                JOptionPane.showMessageDialog(null, "User Account Does Not Exist", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                SearchUpdateUserAccountJPanel panel = new SearchUpdateUserAccountJPanel(userProcessContainer, result, userAccountDirectory);
                userProcessContainer.add("SearchUpdateUserAccountJPanel", panel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
                
                txtSearchUserID.setText("Enter User ID Here");
            }
        }
    }//GEN-LAST:event_btnSearchUserAccountActionPerformed

    private void txtSearchUserIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchUserIDFocusGained
        // TODO add your handling code here:
        txtSearchUserID.setText("");
    }//GEN-LAST:event_txtSearchUserIDFocusGained

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteUserAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserAccountActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblUserAccountList.getSelectedRow();
        if(selectedRow >= 0){
            UserAccount userAccount = (UserAccount)tblUserAccountList.getValueAt(selectedRow, 2);
            if(String.valueOf(userAccount).compareTo("1")==0||String.valueOf(userAccount).compareTo("2")==0){
                System.out.println("print"+userAccount);
                    JOptionPane.showMessageDialog(null, "ADMINS' CANNOT BE DELETED", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            else{
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to DELETE the Account?", "Warning", dialogButton);
                if(dialogResult == JOptionPane.YES_OPTION){
                    userAccountDirectory.deleteUserAccount(userAccount);
                    populateTable();
                }           
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please Select a Row from the TABLE", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteUserAccountActionPerformed

    private void btnUpdateUserAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserAccountActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblUserAccountList.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select a Row from the TABLE to View Details", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            UserAccount userAccount = (UserAccount)tblUserAccountList.getValueAt(selectedRow, 2);
            SearchUpdateUserAccountJPanel panel = new SearchUpdateUserAccountJPanel(userProcessContainer, userAccount, userAccountDirectory);
            userProcessContainer.add("SearchUpdateUserAccountJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnUpdateUserAccountActionPerformed

    private void btnAddUserAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserAccountActionPerformed
        // TODO add your handling code here:
        AddUserAccountJPanel panel = new AddUserAccountJPanel(userProcessContainer, personDirectory, userAccountDirectory);
        userProcessContainer.add("SearchUpdateUserAccountJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnAddUserAccountActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUserAccount;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteUserAccount;
    private javax.swing.JButton btnSearchUserAccount;
    private javax.swing.JButton btnUpdateUserAccount;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel lblManageUserAccounts;
    private javax.swing.JTable tblUserAccountList;
    private javax.swing.JTextField txtSearchUserID;
    // End of variables declaration//GEN-END:variables
}
