/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Aircraft;
import Business.FleetOfAircrafts;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author eklav
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    private FleetOfAircrafts fOFA;
    public ViewJPanel(FleetOfAircrafts fOFA) {
        initComponents();
        this.fOFA = fOFA;
        populateTable();
        Date now = new Date();
        txtLastUpdatedJTextField.setText(String.valueOf(now));
    }
    
    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) tableOfAllFleetJTable.getModel();
        dtm.setRowCount(0);
        
        for(Aircraft afct : fOFA.getFleet()){
            Object row[] = new Object[2];
            row[0] = afct;
            row[1] = afct.getSerialNum();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        allFleetJScrollPane = new javax.swing.JScrollPane();
        tableOfAllFleetJTable = new javax.swing.JTable();
        viewDetailsJButton = new javax.swing.JButton();
        deleteJButton = new javax.swing.JButton();
        aircraftViewPanelJLabel = new javax.swing.JLabel();
        maintenanceCertificateDateJLabel = new javax.swing.JLabel();
        airportLocatedInJLabel = new javax.swing.JLabel();
        manufacturerOfAircraftJLabel = new javax.swing.JLabel();
        departureTimeJLabel = new javax.swing.JLabel();
        updateDetailsJButton = new javax.swing.JButton();
        serialNumberJLabel = new javax.swing.JLabel();
        modelNumberJLabel = new javax.swing.JLabel();
        addNewAircraftJButton = new javax.swing.JButton();
        numberOfSeatsAvailableJLabel = new javax.swing.JLabel();
        yearOfManufactureJLabel = new javax.swing.JLabel();
        txtManufacturerOfAircraftJTextField = new javax.swing.JTextField();
        txtSerialNumberJTextField = new javax.swing.JTextField();
        txtMaintenanceCertificateDateJTextField = new javax.swing.JTextField();
        txtModelNumberJTextField = new javax.swing.JTextField();
        txtYearOfManufactureJTextField = new javax.swing.JTextField();
        txtAirportLocatedInJTextField = new javax.swing.JTextField();
        txtDepartureTimeJTextField = new javax.swing.JTextField();
        txtNumberOfSeatsAvailableJTextField = new javax.swing.JTextField();
        lastUpdatedJLabel = new javax.swing.JLabel();
        txtLastUpdatedJTextField = new javax.swing.JTextField();

        jLabel1.setText("jLabel1");

        tableOfAllFleetJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Manufacturer", "Serial Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allFleetJScrollPane.setViewportView(tableOfAllFleetJTable);

        viewDetailsJButton.setText("View Details");
        viewDetailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsJButtonActionPerformed(evt);
            }
        });

        deleteJButton.setText("Delete");
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });

        aircraftViewPanelJLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        aircraftViewPanelJLabel.setText("Aircraft View Panel");

        maintenanceCertificateDateJLabel.setText("Expired Maintenance Certificate (Y/N):");

        airportLocatedInJLabel.setText("Airport Located in (E/F/G/H):");

        manufacturerOfAircraftJLabel.setText("Manufacturer of Aircraft (A/B/C/D):");

        departureTimeJLabel.setText("Departure Time (00 to 24):");

        updateDetailsJButton.setText("Update Details");
        updateDetailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDetailsJButtonActionPerformed(evt);
            }
        });

        serialNumberJLabel.setText("Serial Number (1 to 100):");

        modelNumberJLabel.setText("Model Number (10 to 20):");

        addNewAircraftJButton.setText("Add New");
        addNewAircraftJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewAircraftJButtonActionPerformed(evt);
            }
        });

        numberOfSeatsAvailableJLabel.setText("Number of Seats Available (1 to 100):");

        yearOfManufactureJLabel.setText("Year of Manufacture (2000 to 2017):");

        txtManufacturerOfAircraftJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManufacturerOfAircraftJTextFieldActionPerformed(evt);
            }
        });

        txtSerialNumberJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialNumberJTextFieldActionPerformed(evt);
            }
        });

        txtDepartureTimeJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDepartureTimeJTextFieldActionPerformed(evt);
            }
        });

        lastUpdatedJLabel.setText("Last Updated:");

        txtLastUpdatedJTextField.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(aircraftViewPanelJLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(viewDetailsJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(allFleetJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(149, 149, 149)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(numberOfSeatsAvailableJLabel)
                                    .addComponent(serialNumberJLabel)
                                    .addComponent(manufacturerOfAircraftJLabel)
                                    .addComponent(maintenanceCertificateDateJLabel)
                                    .addComponent(modelNumberJLabel)
                                    .addComponent(yearOfManufactureJLabel)
                                    .addComponent(airportLocatedInJLabel)
                                    .addComponent(departureTimeJLabel))
                                .addGap(104, 104, 104)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNumberOfSeatsAvailableJTextField)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtManufacturerOfAircraftJTextField)
                                                .addComponent(txtSerialNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtMaintenanceCertificateDateJTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtModelNumberJTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(updateDetailsJButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(addNewAircraftJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtYearOfManufactureJTextField)
                                            .addComponent(txtAirportLocatedInJTextField)
                                            .addComponent(txtDepartureTimeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lastUpdatedJLabel)
                                .addGap(18, 18, 18)
                                .addComponent(txtLastUpdatedJTextField)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(aircraftViewPanelJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLastUpdatedJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastUpdatedJLabel))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(manufacturerOfAircraftJLabel)
                            .addComponent(txtManufacturerOfAircraftJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serialNumberJLabel)
                            .addComponent(txtSerialNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maintenanceCertificateDateJLabel)
                            .addComponent(txtMaintenanceCertificateDateJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(modelNumberJLabel)
                            .addComponent(txtModelNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yearOfManufactureJLabel)
                            .addComponent(txtYearOfManufactureJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(airportLocatedInJLabel)
                            .addComponent(txtAirportLocatedInJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(departureTimeJLabel)
                            .addComponent(txtDepartureTimeJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberOfSeatsAvailableJLabel)
                            .addComponent(txtNumberOfSeatsAvailableJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(addNewAircraftJButton)
                        .addGap(18, 18, 18)
                        .addComponent(updateDetailsJButton))
                    .addComponent(allFleetJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewDetailsJButton)
                    .addComponent(deleteJButton))
                .addContainerGap(57, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableOfAllFleetJTable.getSelectedRow();
        
        if (selectedRowIndex >=0){
            Aircraft afct = (Aircraft) tableOfAllFleetJTable.getValueAt(selectedRowIndex, 0);
            fOFA.deleteAircraft(afct);
            JOptionPane.showMessageDialog(null, "Aircraft record has been deleted");
            
            Date now = new Date();
            txtLastUpdatedJTextField.setText(String.valueOf(now));
            populateTable();
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_deleteJButtonActionPerformed

    private void viewDetailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tableOfAllFleetJTable.getSelectedRow();
        
        if (selectedRowIndex >=0){
            Aircraft afct = (Aircraft) tableOfAllFleetJTable.getValueAt(selectedRowIndex, 0);
            txtDepartureTimeJTextField.setText(afct.getDepartTime());
            txtManufacturerOfAircraftJTextField.setText(afct.getMakeOfAircraft());
            txtYearOfManufactureJTextField.setText(String.valueOf(afct.getMakeYear()));
            txtNumberOfSeatsAvailableJTextField.setText(String.valueOf(afct.getNumOfSeats()));
            txtSerialNumberJTextField.setText(String.valueOf(afct.getSerialNum()));
            txtModelNumberJTextField.setText(String.valueOf(afct.getModelNum()));
            txtAirportLocatedInJTextField.setText(afct.getAirport());
            txtMaintenanceCertificateDateJTextField.setText(afct.getMaintCertification());
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_viewDetailsJButtonActionPerformed

    private void addNewAircraftJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewAircraftJButtonActionPerformed
        // TODO add your handling code here:
        Aircraft a = fOFA.addAircraft();
        
        if((txtDepartureTimeJTextField.getText().equals("") || !(txtDepartureTimeJTextField.getText().matches("[a-zA-Z0-9]+")))||
                (txtManufacturerOfAircraftJTextField.getText().equals("") || !(txtManufacturerOfAircraftJTextField.getText().matches("[a-zA-Z]+")))||
                (txtAirportLocatedInJTextField.getText().equals("") || !(txtAirportLocatedInJTextField.getText().matches("[a-zA-Z]+")))||
                (txtMaintenanceCertificateDateJTextField.getText().equals("") || !(txtMaintenanceCertificateDateJTextField.getText().matches("[a-zA-Z]+")))||
                (txtYearOfManufactureJTextField.getText().equals("") || !(txtYearOfManufactureJTextField.getText().matches("[0-9]+")))||
                (txtNumberOfSeatsAvailableJTextField.getText().equals("") || !(txtNumberOfSeatsAvailableJTextField.getText().matches("[0-9]+")))||
                (txtSerialNumberJTextField.getText().equals("") || !(txtSerialNumberJTextField.getText().matches("[0-9]+")))||
                (txtModelNumberJTextField.getText().equals("") || !(txtModelNumberJTextField.getText().matches("[0-9]+")))){
                
            JOptionPane.showMessageDialog(null,"Invalid Data");
        }
        else{
            String deptTime = txtDepartureTimeJTextField.getText();
            a.setDepartTime(deptTime);
            String makeofAirc = txtManufacturerOfAircraftJTextField.getText();
            a.setMakeOfAircraft(makeofAirc);
            String airportLoc = txtAirportLocatedInJTextField.getText();
            a.setAirport(airportLoc);
            String mantCertificateDt = txtMaintenanceCertificateDateJTextField.getText();
            a.setMaintCertification(mantCertificateDt);
            int makeYearOfAirc = Integer.parseInt(txtYearOfManufactureJTextField.getText());
            a.setMakeYear(makeYearOfAirc);
            int numberOfSeats = Integer.parseInt(txtNumberOfSeatsAvailableJTextField.getText());
            a.setNumOfSeats(numberOfSeats);
            int serialNumber = Integer.parseInt(txtSerialNumberJTextField.getText());
            a.setSerialNum(serialNumber);
            int modelNumber = Integer.parseInt(txtModelNumberJTextField.getText());
            a.setModelNum(modelNumber);
            
            JOptionPane.showMessageDialog(null,"Aircraft Added Successfully");
            
            txtDepartureTimeJTextField.setText("");
            txtManufacturerOfAircraftJTextField.setText("");
            txtYearOfManufactureJTextField.setText("");
            txtNumberOfSeatsAvailableJTextField.setText("");
            txtSerialNumberJTextField.setText("");
            txtModelNumberJTextField.setText("");
            txtAirportLocatedInJTextField.setText("");
            txtMaintenanceCertificateDateJTextField.setText("");
            
            Date now = new Date();
            txtLastUpdatedJTextField.setText(String.valueOf(now));
            populateTable();
        }      
    }//GEN-LAST:event_addNewAircraftJButtonActionPerformed

    private void txtSerialNumberJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialNumberJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialNumberJTextFieldActionPerformed

    private void txtDepartureTimeJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDepartureTimeJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDepartureTimeJTextFieldActionPerformed

    private void updateDetailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDetailsJButtonActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tableOfAllFleetJTable.getSelectedRow();
        
        if (selectedRowIndex >=0){
            Aircraft update = (Aircraft) tableOfAllFleetJTable.getValueAt(selectedRowIndex, 0);       
            
            String deptTime = txtDepartureTimeJTextField.getText();
            String makeofAirc = txtManufacturerOfAircraftJTextField.getText();
            int makeYearOfAirc = Integer.parseInt(txtYearOfManufactureJTextField.getText());
            int numberOfSeats = Integer.parseInt(txtNumberOfSeatsAvailableJTextField.getText());
            int serialNumber = Integer.parseInt(txtSerialNumberJTextField.getText());
            int modelNumber = Integer.parseInt(txtModelNumberJTextField.getText());
            String airportLoc = txtAirportLocatedInJTextField.getText();
            String mantCertificateDt = txtMaintenanceCertificateDateJTextField.getText();
            
            if((deptTime.equals("") || !(deptTime.matches("[a-zA-Z0-9]+")))||
                (makeofAirc.equals("") || !(makeofAirc.matches("[a-zA-Z]+")))||
                (airportLoc.equals("") || !(airportLoc.matches("[a-zA-Z]+")))||
                (mantCertificateDt.equals("") || !(mantCertificateDt.matches("[a-zA-Z]+")))||
                (String.valueOf(makeYearOfAirc).equals("") || !(String.valueOf(makeYearOfAirc).matches("[0-9]+")))||
                (String.valueOf(numberOfSeats).equals("") || !(String.valueOf(numberOfSeats).matches("[0-9]+")))||
                (String.valueOf(serialNumber).equals("") || !(String.valueOf(serialNumber).matches("[0-9]+")))||
                (String.valueOf(modelNumber).equals("") || !(String.valueOf(modelNumber).matches("[0-9]+")))){
                
                JOptionPane.showMessageDialog(null,"Invalid Data");
            }
            else{
                JOptionPane.showMessageDialog(null,"Aircraft Updated Successfully");
            
                txtDepartureTimeJTextField.setText("");
                txtManufacturerOfAircraftJTextField.setText("");
                txtYearOfManufactureJTextField.setText("");
                txtNumberOfSeatsAvailableJTextField.setText("");
                txtSerialNumberJTextField.setText("");
                txtModelNumberJTextField.setText("");
                txtAirportLocatedInJTextField.setText("");
                txtMaintenanceCertificateDateJTextField.setText("");
            
                update.setMakeOfAircraft(makeofAirc);
                update.setDepartTime(deptTime);
                update.setMakeYear(makeYearOfAirc);
                update.setNumOfSeats(numberOfSeats);
                update.setSerialNum(serialNumber);
                update.setModelNum(modelNumber);
                update.setAirport(airportLoc);
                update.setMaintCertification(mantCertificateDt);
                
                fOFA.updateAircraft(selectedRowIndex, update);

                Date now = new Date();
                txtLastUpdatedJTextField.setText(String.valueOf(now));
                populateTable();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_updateDetailsJButtonActionPerformed

    private void txtManufacturerOfAircraftJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManufacturerOfAircraftJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManufacturerOfAircraftJTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewAircraftJButton;
    private javax.swing.JLabel aircraftViewPanelJLabel;
    private javax.swing.JLabel airportLocatedInJLabel;
    private javax.swing.JScrollPane allFleetJScrollPane;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JLabel departureTimeJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lastUpdatedJLabel;
    private javax.swing.JLabel maintenanceCertificateDateJLabel;
    private javax.swing.JLabel manufacturerOfAircraftJLabel;
    private javax.swing.JLabel modelNumberJLabel;
    private javax.swing.JLabel numberOfSeatsAvailableJLabel;
    private javax.swing.JLabel serialNumberJLabel;
    private javax.swing.JTable tableOfAllFleetJTable;
    private javax.swing.JTextField txtAirportLocatedInJTextField;
    private javax.swing.JTextField txtDepartureTimeJTextField;
    private javax.swing.JTextField txtLastUpdatedJTextField;
    private javax.swing.JTextField txtMaintenanceCertificateDateJTextField;
    private javax.swing.JTextField txtManufacturerOfAircraftJTextField;
    private javax.swing.JTextField txtModelNumberJTextField;
    private javax.swing.JTextField txtNumberOfSeatsAvailableJTextField;
    private javax.swing.JTextField txtSerialNumberJTextField;
    private javax.swing.JTextField txtYearOfManufactureJTextField;
    private javax.swing.JButton updateDetailsJButton;
    private javax.swing.JButton viewDetailsJButton;
    private javax.swing.JLabel yearOfManufactureJLabel;
    // End of variables declaration//GEN-END:variables
}
